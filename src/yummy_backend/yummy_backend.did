type Error = variant {
  UserAlreadyExists : record { msg : text };
  ImagesNotFound : record { msg : text };
  UserNotFound : record { msg : text };
};
type Result = variant { Ok : User; Err : Error };
type Result_1 = variant { Ok : text; Err : Error };
type Result_2 = variant { Ok : vec User; Err : Error };
type Result_3 = variant { Ok : vec text; Err : Error };
type User = record { id : principal; name : text };
service : {
  create_user : (text) -> (Result);
  delete_user_by_index : (nat64) -> (Result_1);
  get_all_users : () -> (Result_2) query;
  get_image : (text) -> (blob) query;
  get_images_names : () -> (Result_3) query;
  get_user : (nat64) -> (Result) query;
  popular_recipes : () -> (text);
  whoami : () -> (principal) query;
}
