type Error = variant {
  UserAlreadyExists : record { msg : text };
  CallerNotAuthorized : record { msg : text };
  InvalidName : record { msg : text };
  ImageNotDownloaded : record { msg : text };
  RecipeAlreadyExists : record { msg : text };
  RecipesNotFound : record { msg : text };
  RecipeNotFound : record { msg : text };
  UserNotFound : record { msg : text };
};
type RecipeBriefResponse = record {
  name : text;
  tags : vec text;
  author : opt text;
  total_time : nat16;
};
type RecipeInfo = record {
  total_time_in_seconds : nat16;
  tags : vec text;
  popular : bool;
  instructions : vec text;
  likes : vec nat64;
  cuisines : vec text;
  author_id : opt nat64;
  ingredients : vec text;
};
type RecipePayload = record {
  total_time_in_seconds : nat16;
  name : text;
  tags : vec text;
  instructions : vec text;
  cuisines : vec text;
  author_id : nat64;
  image : text;
  ingredients : vec text;
};
type Result = variant { Ok : text; Err : Error };
type Result_1 = variant { Ok : nat64; Err : Error };
type Result_2 = variant { Ok : vec User; Err : Error };
type Result_3 = variant { Ok : User; Err : Error };
type Result_4 = variant { Ok : record { RecipeInfo; opt text }; Err : Error };
type User = record { id : principal; name : text };
service : () -> {
  add_image : (text, text) -> ();
  add_recipe : (RecipePayload) -> (Result);
  create_user : (text) -> (Result_1);
  delete_recipe : (text) -> (Result);
  delete_recipes_and_images_by_author : (nat64) -> ();
  delete_user : () -> (Result);
  get_all_users : () -> (Result_2) query;
  get_image : (text) -> (text) query;
  get_recipes_len : () -> (nat64) query;
  get_user_by_index : (nat64) -> (Result_3) query;
  get_user_index : () -> (Result_1) query;
  get_user_info : () -> (Result_3) query;
  get_username_by_index : (nat64) -> (opt text) query;
  recipe_exists : (text) -> (bool) query;
  take_recipe : (text) -> (Result_4) query;
  take_recipes_by_author : (nat64) -> (vec RecipeBriefResponse) query;
  take_recipes_names : () -> (vec text) query;
  take_recipes_of_specific_type : (text) -> (vec RecipeBriefResponse) query;
  take_user_recipes_with_author_names : () -> (vec RecipeBriefResponse) query;
  update_username : (nat64, text) -> (Result_3);
}
